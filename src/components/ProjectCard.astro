---
interface Props {
  title: string;
  description: string;
  budget: number;
  clientName: string;
  category?: string;
  skills?: string[];
  deadline?: string;
  id?: string;
}

const { 
  title, 
  description, 
  budget, 
  clientName, 
  category = "Web Development", 
  skills = ["JavaScript", "React"],
  deadline,
  id = "project-1" 
} = Astro.props;

// Format currency
const formattedBudget = new Intl.NumberFormat('en-US', {
  style: 'currency',
  currency: 'USD',
  minimumFractionDigits: 0,
  maximumFractionDigits: 0
}).format(budget);

// Calculate urgency if deadline exists
let urgency = null;
let urgencyClass = "";

if (deadline) {
  const now = new Date();
  const deadlineDate = new Date(deadline);
  const daysLeft = Math.ceil((deadlineDate.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));
  
  if (daysLeft <= 3) {
    urgency = "Urgent";
    urgencyClass = "bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300";
  } else if (daysLeft <= 7) {
    urgency = "Soon";
    urgencyClass = "bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-300";
  }
}
---

<div class="card card-hover dark:bg-neutral-800 dark:border-neutral-700 transition-all duration-200">
  <div class="card-body">
    <div class="flex justify-between items-start mb-3">
      <h3 class="font-heading text-lg font-semibold line-clamp-1">{title}</h3>
      <span class="badge-primary dark:bg-primary-900/30">{category}</span>
    </div>
    
    <p class="text-neutral-700 dark:text-neutral-300 mb-4 line-clamp-2 text-sm h-10">
      {description}
    </p>
    
    <div class="flex flex-wrap gap-1.5 mb-4">
      {skills.slice(0, 3).map(skill => (
        <span class="badge bg-neutral-100 text-neutral-600 dark:bg-neutral-700 dark:text-neutral-300">
          {skill}
        </span>
      ))}
      {skills.length > 3 && (
        <span class="badge bg-neutral-100 text-neutral-600 dark:bg-neutral-700 dark:text-neutral-300">
          +{skills.length - 3} more
        </span>
      )}
    </div>
    
    <div class="flex items-center justify-between pt-2 border-t border-neutral-200 dark:border-neutral-700">
      <div class="text-primary-600 dark:text-primary-400 font-medium">
        {formattedBudget}
      </div>
      
      <div class="flex items-center gap-2">
        {urgency && (
          <span class={`badge ${urgencyClass}`}>
            {urgency}
          </span>
        )}
        <a 
          href={`/projects/${id}`} 
          class="btn-sm btn-outline dark:border-primary-400 dark:text-primary-400 dark:hover:bg-primary-950"
        >
          Details
        </a>
      </div>
    </div>
    
    <div class="text-sm text-neutral-500 dark:text-neutral-400 mt-3">
      Posted by {clientName}
    </div>
  </div>
</div>