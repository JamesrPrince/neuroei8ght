---
import Layout from '../layouts/Layout.astro';
import { createClient } from '@supabase/supabase-js';

const supabase = createClient('https://xcnapnpirhhljynxqgas.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhjbmFwbnBpcmhobGp5bnhxZ2FzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYwODgyMzgsImV4cCI6MjA2MTY2NDIzOH0.GUQyYVD3T4AtFFq0A4xD1UG5q5FOb187jCgcZGEgzCY');

interface User {
  id: string;
  email: string;
  role: string;
}

interface Project {
  title: string;
  budget: number;
  client_id: string;
}

interface Dispute {
  id: string;
  description: string;
  status: string;
}

let users: User[] = [];
let projects: Project[] = [];
let disputes: Dispute[] = [];

async function fetchAdminData() {
  const { data: userData, error: userError } = await supabase.from<User>('users').select('*');
  const { data: projectData, error: projectError } = await supabase.from<Project>('projects').select('*');
  const { data: disputeData, error: disputeError } = await supabase.from<Dispute>('disputes').select('*');

  if (userData) users = userData;
  if (projectData) projects = projectData;
  if (disputeData) disputes = disputeData;

  if (userError || projectError || disputeError) {
    console.error(userError || projectError || disputeError);
  }
}

fetchAdminData();

// Sample data for demo purposes
users = [
  { id: '1', email: 'john@example.com', role: 'client' },
  { id: '2', email: 'sarah@example.com', role: 'designer' },
  { id: '3', email: 'mike@example.com', role: 'developer' }
];

projects = [
  { title: 'E-commerce Website', budget: 5000, client_id: '1' },
  { title: 'Mobile App Design', budget: 3500, client_id: '2' },
  { title: 'Brand Identity', budget: 2000, client_id: '1' }
];

disputes = [
  { id: 'd1', description: 'Delayed delivery of project assets', status: 'Open' },
  { id: 'd2', description: 'Payment dispute for additional features', status: 'Under Review' },
  { id: 'd3', description: 'Quality concerns with deliverables', status: 'Resolved' }
];

// Stats for the dashboard
const totalUsers = users.length;
const totalProjects = projects.length;
const totalDisputes = disputes.length;
const totalRevenue = projects.reduce((sum, project) => sum + project.budget, 0);
---

<Layout>
  <div class="admin-page">
    <section class="admin-hero">
      <div class="container">
        <h1 class="page-title">Admin Dashboard</h1>
        <p class="subtitle">Manage your platform's users, projects, and disputes</p>
      </div>
      <div class="admin-shapes">
        <div class="admin-shape admin-shape-1"></div>
        <div class="admin-shape admin-shape-2"></div>
      </div>
    </section>

    <section class="stats-section">
      <div class="container">
        <div class="stats-grid">
          <div class="stat-card" data-aos="fade-up" data-aos-delay="0">
            <div class="stat-icon users-icon">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
              </svg>
            </div>
            <h3>Total Users</h3>
            <p class="stat-value">{totalUsers}</p>
          </div>
          
          <div class="stat-card" data-aos="fade-up" data-aos-delay="100">
            <div class="stat-icon projects-icon">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
              </svg>
            </div>
            <h3>Active Projects</h3>
            <p class="stat-value">{totalProjects}</p>
          </div>
          
          <div class="stat-card" data-aos="fade-up" data-aos-delay="200">
            <div class="stat-icon disputes-icon">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
              </svg>
            </div>
            <h3>Open Disputes</h3>
            <p class="stat-value">{totalDisputes}</p>
          </div>
          
          <div class="stat-card" data-aos="fade-up" data-aos-delay="300">
            <div class="stat-icon revenue-icon">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <h3>Total Revenue</h3>
            <p class="stat-value">${totalRevenue.toLocaleString()}</p>
          </div>
        </div>
      </div>
    </section>

    <section class="data-section">
      <div class="container">
        <div class="tabs">
          <button class="tab-button active" data-tab="users">Users</button>
          <button class="tab-button" data-tab="projects">Projects</button>
          <button class="tab-button" data-tab="disputes">Disputes</button>
        </div>

        <div class="tab-content" id="users-tab">
          <div class="panel-header">
            <h2>User Management</h2>
            <button class="action-button">
              <span>Add User</span>
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
              </svg>
            </button>
          </div>
          <div class="table-container" data-aos="fade-up">
            <table class="data-table">
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Email</th>
                  <th>Role</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                {users.map(user => (
                  <tr>
                    <td>{user.id}</td>
                    <td>{user.email}</td>
                    <td>
                      <span class={`badge ${user.role}`}>{user.role}</span>
                    </td>
                    <td>
                      <div class="action-buttons">
                        <button class="icon-button edit">
                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                          </svg>
                        </button>
                        <button class="icon-button delete">
                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                          </svg>
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        <div class="tab-content hidden" id="projects-tab">
          <div class="panel-header">
            <h2>Project Management</h2>
            <button class="action-button">
              <span>Add Project</span>
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
              </svg>
            </button>
          </div>
          <div class="table-container" data-aos="fade-up">
            <table class="data-table">
              <thead>
                <tr>
                  <th>Title</th>
                  <th>Budget</th>
                  <th>Client ID</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                {projects.map(project => (
                  <tr>
                    <td>{project.title}</td>
                    <td class="budget">${project.budget.toLocaleString()}</td>
                    <td>{project.client_id}</td>
                    <td>
                      <div class="action-buttons">
                        <button class="icon-button view">
                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                          </svg>
                        </button>
                        <button class="icon-button edit">
                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                          </svg>
                        </button>
                        <button class="icon-button delete">
                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                          </svg>
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        <div class="tab-content hidden" id="disputes-tab">
          <div class="panel-header">
            <h2>Dispute Management</h2>
            <div class="filter-buttons">
              <button class="filter-button active">All</button>
              <button class="filter-button">Open</button>
              <button class="filter-button">Under Review</button>
              <button class="filter-button">Resolved</button>
            </div>
          </div>
          <div class="table-container" data-aos="fade-up">
            <table class="data-table">
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Description</th>
                  <th>Status</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                {disputes.map(dispute => (
                  <tr>
                    <td>{dispute.id}</td>
                    <td>{dispute.description}</td>
                    <td>
                      <span class={`badge status-${dispute.status.toLowerCase().replace(' ', '-')}`}>{dispute.status}</span>
                    </td>
                    <td>
                      <div class="action-buttons">
                        <button class="icon-button view">
                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                          </svg>
                        </button>
                        <button class="icon-button resolve">
                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                          </svg>
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </section>
  </div>
</Layout>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700&display=swap');

  :root {
    --primary-gradient: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #ec4899 100%);
    --secondary-gradient: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 50%, #d946ef 100%);
    --accent-gradient: linear-gradient(135deg, #14b8a6 0%, #0ea5e9 50%, #6366f1 100%);
    --text-gradient: linear-gradient(90deg, #3b82f6, #8b5cf6, #d946ef);
    
    --primary-color: #6366f1;
    --secondary-color: #8b5cf6;
    --accent-color: #14b8a6;
    --text-color: #1e293b;
    --text-light: #64748b;
    --bg-light: #f8fafc;
    --bg-lighter: #ffffff;
    --bg-dark: #1e293b;
    
    --shadow-sm: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
    --shadow-md: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);
    --shadow-lg: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1);
    
    --border-radius-sm: 0.375rem;
    --border-radius-md: 0.75rem;
    --border-radius-lg: 1.5rem;
  }

  .container {
    width: 100%;
    max-width: 1280px;
    margin-left: auto;
    margin-right: auto;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .admin-page {
    background-color: var(--bg-light);
    min-height: calc(100vh - 80px);
  }

  .admin-hero {
    position: relative;
    padding: 4rem 0 3rem;
    background-image: linear-gradient(135deg, rgba(99, 102, 241, 0.05) 0%, rgba(139, 92, 246, 0.1) 100%);
    overflow: hidden;
  }

  .page-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    background-image: var(--text-gradient);
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    animation: fade-in 1s ease, slide-up 1s ease;
  }

  .subtitle {
    font-size: 1.2rem;
    color: var(--text-light);
    margin-bottom: 2rem;
    animation: fade-in 1.2s ease, slide-up 1.2s ease;
  }

  .admin-shapes {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
    z-index: 0;
  }

  .admin-shape {
    position: absolute;
    border-radius: 50%;
    opacity: 0.4;
    filter: blur(60px);
  }

  .admin-shape-1 {
    top: -50px;
    right: 5%;
    width: 300px;
    height: 300px;
    background-color: #6366f1;
    animation: float 15s ease-in-out infinite;
  }

  .admin-shape-2 {
    bottom: -100px;
    left: 10%;
    width: 350px;
    height: 350px;
    background-color: #8b5cf6;
    animation: float 20s ease-in-out infinite reverse;
  }

  /* Stats Section */
  .stats-section {
    padding: 3rem 0;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 1.5rem;
  }

  @media (min-width: 640px) {
    .stats-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .stats-grid {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  .stat-card {
    background: white;
    border-radius: var(--border-radius-md);
    padding: 1.75rem;
    box-shadow: var(--shadow-sm);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    text-align: center;
    position: relative;
    overflow: hidden;
  }

  .stat-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-md);
  }

  .stat-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 50%;
    margin-bottom: 1.25rem;
    color: white;
  }

  .users-icon {
    background-image: linear-gradient(135deg, #3b82f6, #6366f1);
  }

  .projects-icon {
    background-image: linear-gradient(135deg, #8b5cf6, #a855f7);
  }

  .disputes-icon {
    background-image: linear-gradient(135deg, #ec4899, #f43f5e);
  }

  .revenue-icon {
    background-image: linear-gradient(135deg, #14b8a6, #0ea5e9);
  }

  .stat-icon svg {
    width: 1.75rem;
    height: 1.75rem;
  }

  .stat-card h3 {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: var(--text-light);
  }

  .stat-value {
    font-size: 2rem;
    font-weight: 700;
    color: var(--text-color);
  }

  /* Data Section */
  .data-section {
    padding: 2rem 0 5rem;
  }

  .tabs {
    display: flex;
    gap: 0.5rem;
    background-color: white;
    padding: 0.5rem;
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-sm);
    margin-bottom: 1.5rem;
    overflow-x: auto;
  }

  .tab-button {
    padding: 0.75rem 1.5rem;
    background: transparent;
    border: none;
    border-radius: var(--border-radius-sm);
    color: var(--text-light);
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .tab-button:hover {
    color: var(--primary-color);
  }

  .tab-button.active {
    background-image: var(--primary-gradient);
    color: white;
  }

  .tab-content {
    background: white;
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-sm);
    overflow: hidden;
  }

  .tab-content.hidden {
    display: none;
  }

  .panel-header {
    padding: 1.5rem;
    border-bottom: 1px solid #e5e7eb;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .panel-header h2 {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
  }

  .action-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: var(--border-radius-sm);
    background-image: var(--primary-gradient);
    color: white;
    font-weight: 500;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .action-button:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }

  .action-button svg {
    width: 1.25rem;
    height: 1.25rem;
  }

  .filter-buttons {
    display: flex;
    gap: 0.5rem;
  }

  .filter-button {
    padding: 0.4rem 0.75rem;
    border: 1px solid #e5e7eb;
    border-radius: var(--border-radius-sm);
    background-color: white;
    color: var(--text-light);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .filter-button:hover {
    border-color: var(--primary-color);
    color: var(--primary-color);
  }

  .filter-button.active {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    color: white;
  }

  .table-container {
    overflow-x: auto;
  }

  .data-table {
    width: 100%;
    border-collapse: collapse;
  }

  .data-table th {
    padding: 1rem 1.5rem;
    text-align: left;
    font-weight: 600;
    font-size: 0.875rem;
    color: var(--text-light);
    border-bottom: 1px solid #e5e7eb;
  }

  .data-table td {
    padding: 1rem 1.5rem;
    border-bottom: 1px solid #e5e7eb;
    font-size: 0.95rem;
  }

  .data-table tbody tr:hover {
    background-color: rgba(99, 102, 241, 0.05);
  }

  .badge {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 500;
    text-transform: capitalize;
  }

  .badge.client {
    background-color: #dbeafe;
    color: #2563eb;
  }

  .badge.designer {
    background-color: #f3e8ff;
    color: #9333ea;
  }

  .badge.developer {
    background-color: #dcfce7;
    color: #16a34a;
  }

  .badge.status-open {
    background-color: #fee2e2;
    color: #dc2626;
  }

  .badge.status-under-review {
    background-color: #fef3c7;
    color: #d97706;
  }

  .badge.status-resolved {
    background-color: #dcfce7;
    color: #16a34a;
  }

  .budget {
    font-weight: 600;
    color: #047857;
  }

  .action-buttons {
    display: flex;
    gap: 0.5rem;
  }

  .icon-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    border: none;
    background-color: #f1f5f9;
    color: var(--text-light);
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .icon-button svg {
    width: 1rem;
    height: 1rem;
  }

  .icon-button.view:hover {
    background-color: #dbeafe;
    color: #2563eb;
  }

  .icon-button.edit:hover {
    background-color: #f3e8ff;
    color: #9333ea;
  }

  .icon-button.delete:hover {
    background-color: #fee2e2;
    color: #dc2626;
  }

  .icon-button.resolve:hover {
    background-color: #dcfce7;
    color: #16a34a;
  }

  @media (max-width: 768px) {
    .panel-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .action-button, .filter-buttons {
      width: 100%;
    }

    .filter-buttons {
      overflow-x: auto;
      padding-bottom: 0.5rem;
    }
    
    .data-table {
      min-width: 700px;
    }
  }

  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes slide-up {
    from {
      transform: translateY(20px);
    }
    to {
      transform: translateY(0);
    }
  }

  @keyframes float {
    0% {
      transform: translate(0, 0);
    }
    50% {
      transform: translate(10px, 10px);
    }
    100% {
      transform: translate(0, 0);
    }
  }

  [data-aos="fade-up"] {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }

  [data-aos="fade-up"].aos-animate {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  // Tab switching functionality
  const tabButtons = document.querySelectorAll('.tab-button');
  const tabContents = document.querySelectorAll('.tab-content');

  tabButtons.forEach(button => {
    button.addEventListener('click', () => {
      // Remove active class from all buttons
      tabButtons.forEach(btn => btn.classList.remove('active'));
      
      // Add active class to clicked button
      button.classList.add('active');
      
      // Hide all tab content
      tabContents.forEach(content => content.classList.add('hidden'));
      
      // Show selected tab content
      const tabId = button.getAttribute('data-tab');
      document.getElementById(`${tabId}-tab`).classList.remove('hidden');
    });
  });

  // Simple AOS (Animate On Scroll) implementation
  document.addEventListener('DOMContentLoaded', () => {
    const animatedElements = document.querySelectorAll('[data-aos]');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('aos-animate');
        }
      });
    }, {
      threshold: 0.1
    });
    
    animatedElements.forEach(element => {
      observer.observe(element);
      
      // Apply delay if specified
      const delay = element.getAttribute('data-aos-delay');
      if (delay) {
        element.style.transitionDelay = `${delay}ms`;
      }
    });
  });
</script>